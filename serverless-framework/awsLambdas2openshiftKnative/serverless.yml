# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: awslambdas2openshiftknative
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  stage: dev
  region: eu-west-2
  iamRoleStatements:      

    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:GetRecords
        - dynamodb:GetShardIterator
        - dynamodb:DescribeStream
        - dynamodb:ListStreams
        - dynamodb:BatchWriteItem
        - dynamodb:BatchGetItem
      Resource: arn:aws:dynamodb:eu-west-2:*:*
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:PutObjectAcl
      Resource: "arn:aws:s3:::*/*"
  environment:
    TUTORIALS_TABLENAME: tutorials_dev
    OPENSHIFT_ENDPOINT_URL: http://knative-crud-api-serverless-demo.apps.ocp1.purplesky.cloud/api/tutorials
    # OPENSHIFT_ENDPOINT_URL: http://knative-crud-api-serverless-demo.apps.ocp1.purplesky.cloud/api/tutorials
    # IS_OFFLINE: ${opt:offline}


functions:
  insertTutorial:
    handler: insertTutorial.insert
    memorySize: 128
    timeout: 30
    events:
      - http:
          path: hello
          method: GET
          cors: true

  dynamodbToOpenshift:
    handler: dynamo2openshift.openshift
    memorySize: 128
    timeout: 360
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - tutorialsTable
              - StreamArn
          batchSize: 1

resources:
  Resources:
    tutorialsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: tutorials_${self:provider.stage}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        StreamSpecification:
          StreamViewType: NEW_IMAGE